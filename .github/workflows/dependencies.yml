name: Dependencies

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:

jobs:
  dependency-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if npm audit --audit-level=moderate; then
          echo "✅ No moderate or higher severity vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Vulnerabilities detected - please review" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level=moderate >> audit_output.txt
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat audit_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Check for outdated packages
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📅 Outdated Packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if npm outdated > outdated_output.txt; then
          echo "✅ All packages are up to date" >> $GITHUB_STEP_SUMMARY
        else
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat outdated_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Update patch versions
      run: |
        echo "Updating patch versions..."
        npm update
        
    - name: Install updated dependencies
      run: npm ci
      
    - name: Run tests with updated dependencies
      run: npm run test:run
      
    - name: Build with updated dependencies
      run: npm run build
      
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies to latest patch versions'
        title: 'chore: dependency updates'
        body: |
          ## Dependency Updates
          
          This PR contains automated dependency updates:
          
          - 🔄 Updated all packages to latest patch versions
          - ✅ All tests pass with updated dependencies
          - 🛠️ Build succeeds with updated dependencies
          
          ### Testing
          - [x] Tests pass
          - [x] Build succeeds
          - [x] No breaking changes detected
        branch: chore/dependency-updates
        delete-branch: true
        
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install license checker
      run: npm install -g license-checker
      
    - name: Check licenses
      run: |
        echo "## 📄 License Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        license-checker --summary > license_summary.txt
        echo "### License Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat license_summary.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
        # Check for problematic licenses
        if license-checker --failOn 'GPL-3.0;AGPL-3.0;LGPL-3.0;GPL-2.0;LGPL-2.1' --summary; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ No problematic licenses detected" >> $GITHUB_STEP_SUMMARY
        else
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Potentially problematic licenses found" >> $GITHUB_STEP_SUMMARY
        fi